type ArtworkMarkQueryParams = record { dossier_id : text };
type CartridgeQueryParams = record { uuid : text };
type CartridgeUseParams = record {
  count : text;
  uuid : text;
  purchase_time : text;
};
type Dossier = record {
  id : opt nat64;
  inserted_by : opt text;
  has_artwork_mark : opt bool;
  uuid : text;
  ora_inserimento : text;
  autore : text;
  icon_uri : text;
  private : bool;
  luogoopera : text;
  friendly_name : opt text;
  nomeopera : text;
  tipoopera : text;
};
type MyError = variant {
  CanisterError : record { message : text };
  InvalidCanister;
};
type QueryDocumentsParams = record { dossieropera_id : text };
type QueryParams = record { offset : nat64; limit : nat64 };
type Rbac = record {
  id : nat64;
  "principal" : text;
  associate_dna_ok : bool;
  add_dna_ok : bool;
  friendly_name : opt text;
  view_opera_ok : bool;
  add_opera_ok : bool;
};
type Result = variant { Ok : text; Err : MyError };
type Result_1 = variant { Ok : Rbac; Err : MyError };
type Result_2 = variant { Ok : vec vec text; Err : MyError };
service : {
  artwork_mark_insert : (text) -> (Result);
  artwork_mark_query : (ArtworkMarkQueryParams) -> (Result) query;
  cartridge_insert : (text) -> (Result);
  cartridge_query : (CartridgeQueryParams) -> (Result) query;
  cartridge_use_available : () -> (Result);
  cartridge_use_insert : (CartridgeUseParams) -> (Result);
  cartridge_use_update : (text) -> (Result);
  check_caller : () -> (Result_1) query;
  document_insert : (text) -> (Result);
  documenti_pulldowns : () -> (Result) query;
  documenti_query : (QueryDocumentsParams) -> (Result) query;
  dossier_insert : (text) -> (Result);
  dossier_pulldowns : () -> (Result) query;
  dossier_query : (QueryParams) -> (Result) query;
  dossier_struct_query : (text) -> (vec Dossier) query;
  execute : (text) -> (Result);
  greet : (text) -> (text) query;
  "query" : (text) -> (Result_2) query;
  whoami : () -> (text) query;
}
